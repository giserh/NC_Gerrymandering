<?xml version="1.0" encoding="UTF-8"?>

<solver>
	<!-- <environmentMode>FAST_ASSERT</environmentMode> -->

	<scanAnnotatedClasses />


	<!-- Score configuration -->
	<scoreDirectorFactory>
		<scoreDrl>solver/gerrymanderingRules.drl</scoreDrl>
	</scoreDirectorFactory>

	<!-- Optimization algorithms configuration -->

	<termination>
		<secondsSpentLimit>200</secondsSpentLimit>
	</termination>

	<!-- Optimization algorithms configuration -->
	<constructionHeuristic />
	<localSearch>
		<!-- <acceptor>
			<entityTabuSize>7</entityTabuSize>
		</acceptor>
		<forager>
			<acceptedCountLimit>1000</acceptedCountLimit>
		</forager> -->
		<!-- <unionMoveSelector> <changeMoveSelector /> <swapMoveSelector /> -->
		<!-- To escape the local optimum in this knapsack variant, add pillar swap moves to swap 2 sets of states. -->
		<!-- <pillarSwapMoveSelector /> </unionMoveSelector> <forager> <acceptedCountLimit>1000</acceptedCountLimit> </forager> -->

	</localSearch>
</solver>